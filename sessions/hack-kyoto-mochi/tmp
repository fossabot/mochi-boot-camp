diff --git a/sessions/s2-hands-on/sum/client.c b/sessions/s2-hands-on/sum/client.c
index fe91b40..2c38386 100644
--- a/sessions/s2-hands-on/sum/client.c
+++ b/sessions/s2-hands-on/sum/client.c
@@ -21,7 +21,7 @@ int main(int argc, char** argv)
     sum_in_t args;
     for(i=0; i<4; i++) {
         args.x = 42+i*2;
-        args.y = 42+i*2+1;
+        args.str = "client";
 
         hg_handle_t h;
         margo_create(mid, svr_addr, sum_rpc_id, &h);
@@ -30,7 +30,7 @@ int main(int argc, char** argv)
         sum_out_t resp;
         margo_get_output(h, &resp);
 
-        printf("Got response: %d+%d = %d\n", args.x, args.y, resp.ret);
+        printf("Got response: (%d, %s) => %d\n", args.x, args.str, resp.ret);
 
         margo_free_output(h,&resp);
         margo_destroy(h);
diff --git a/sessions/s2-hands-on/sum/server.c b/sessions/s2-hands-on/sum/server.c
index 7dbaccd..e295a54 100644
--- a/sessions/s2-hands-on/sum/server.c
+++ b/sessions/s2-hands-on/sum/server.c
@@ -52,8 +52,8 @@ static void sum(hg_handle_t h)
     ret = margo_get_input(h, &in);
     assert(ret == HG_SUCCESS);
 
-    out.ret = in.x + in.y;
-    printf("Computed %d + %d = %d\n",in.x,in.y,out.ret);
+    out.ret = in.x;
+    printf("Send from client (%d, %s) => %d\n",in.x,in.str,out.ret);
 
     ret = margo_respond(h, &out);
     assert(ret == HG_SUCCESS);
diff --git a/sessions/s2-hands-on/sum/types.h b/sessions/s2-hands-on/sum/types.h
index 5671390..a14dd73 100644
--- a/sessions/s2-hands-on/sum/types.h
+++ b/sessions/s2-hands-on/sum/types.h
@@ -3,6 +3,7 @@
 
 #include <mercury.h>
 #include <mercury_macros.h>
+#include <mercury_proc_string.h>
 
 /* We use the Mercury macros to define the input
  * and output structures along with the serialization
@@ -10,7 +11,7 @@
  */
 MERCURY_GEN_PROC(sum_in_t,
         ((int32_t)(x))\
-        ((int32_t)(y)))
+        ((hg_const_string_t)(str)))
 
 MERCURY_GEN_PROC(sum_out_t, ((int32_t)(ret)))
 
